#include <iostream>
#include <stdlib.h>
#include <cmath>
using namespace std;

struct phanso {
    int tu;
    int mau;
};
typedef phanso PS;

struct DanhSach {
	PS a[100];
	int n;
};
typedef DanhSach ds;

void menu();
void nhapPhanSo(PS &ps);
void inPhanSo(PS ps);
int UCLN(int a, int b);
void toiGianPhanSo(PS &ps);
PS tongPhanSo(PS a, PS b);
PS hieuPhanSo(PS a, PS b);
PS tichPhanSo(PS a, PS b);
PS thuongPhanSo(PS a, PS b);
bool soSanhNhoHonPhanSo(PS a, PS b);
void nhapds(ds &ds);
void xuatds(ds &ds);
void sapxep(ds &ds);
int demBang0(ds &ds);
int demLonHon0(ds &ds);
int demNhoHon0(ds &ds);
PS tongPhanSoLonHon1(ds &ds);
PS tongPhanSoNhoHon1(ds &ds);

int main() {
	menu();
}

void menu() {
	int ch;
	ds ds;
	nhapds(ds);
	if (ds.n == 0) {
		cout << "Tam biet !!!";
	} else if (ds.n == 1) {
		cout << "\nBye";
	} else if (ds.n == 2) {
		cout << "\n\t\t--------------MENU--------------";
	    cout << "\n\t1.Tinh tong 2 phan so";
	    cout << "\n\t2.Tinh hieu 2 phan so";
	    cout << "\n\t3.Tinh tich 2 phan so";
	    cout << "\n\t4.Tinh thuong 2 phan so";
	    cout << "\n\t5.So sanh 2 phan so";
	    cout << "\n    *************************************************";
	    cout << "\n\tChon 1 trong cac chuc nang tren: ";
	    cin >> ch;
	    switch(ch) {
	    	case 1: {
	    		PS tong = tongPhanSo(ds.a[0], ds.a[1]);
	            cout << "\nTong hai phan so la: \n";
	            inPhanSo(tong);
				break;
			}
			case 2: {
				phanso hieu = hieuPhanSo(ds.a[0], ds.a[1]);
	            cout << "\nHieu hai phan so la:  \n";
	            inPhanSo(hieu);
				break;
			}
			case 3: {
				phanso tich = tichPhanSo(ds.a[0], ds.a[1]);
	            cout << "\nTich hai phan so la: \n";
	            inPhanSo(tich);
				break;
			}
			case 4: {
				phanso thuong = thuongPhanSo(ds.a[0], ds.a[1]);
	            cout << "\nThuong hai phan so la:  \n";
              	inPhanSo(thuong);
				break;
			}
			case 5: {
				if (soSanhNhoHonPhanSo(ds.a[0], ds.a[1]) == 1) {
		            cout << "\n\nPhan so thu nhat nho hon phan so thu hai!!!";
	            } else {
		            cout << "\nPhan so thu nhat lon hon phan so thu hai!!!";
	            }
				break;
			}
		}
	} else {
		cout << "\nDanh sach cac phan so theo thu tu giam dan la: ";
		sapxep(ds);
    	xuatds(ds);
    	cout << "\n-------------------------------------------------";
    	cout << "\nCo " << demBang0(ds) << " phan so bang 0";
        cout << "\nCo " << demLonHon0(ds) << " phan so lon hon 0";
    	cout << "\nCo " << demNhoHon0(ds) << " phan so nho hon 0";
    	cout << "\n-------------------------------------------------";
    	cout << "\nTong phan so co tri tuyet doi lon hon 1 la: ";
	    inPhanSo(tongPhanSoLonHon1(ds));
	    cout << "\nTong phan so co tri tuyet doi nho hon 1 la: ";
	    inPhanSo(tongPhanSoNhoHon1(ds));
	}
}

void nhapPhanSo(PS &ps) {
    cout << "\nNhap vao tu so: ";
    cin >> ps.tu;
    do {
		cout << "Nhap vao mau so: ";
		cin >> ps.mau;
		if (ps.mau == 0)
			cout << "\nMau phai khac khong. Vui long kiem tra lai\n";
	} while (ps.mau == 0);
}

void inPhanSo(PS ps) {
	cout << "Phan so: " << ps.tu << " / " << ps.mau;
	cout << "\n--------------------------";
}

int UCLN(int a, int b) {
	a = abs(a);
	b = abs(b);
    if (b == 0) return a;
    return UCLN(b, a % b);
}

void toiGianPhanSo(PS &ps) {
	int c = UCLN(ps.tu,ps.mau);
	ps.tu = ps.tu/c;
	ps.mau = ps.mau/c;
}

PS tongPhanSo(PS a, PS b) {
	PS tong;
	tong.tu = a.tu*b.mau + b.tu*a.mau;
    tong.mau = a.mau*b.mau;
	toiGianPhanSo(tong);
	return tong;
}

PS hieuPhanSo(PS a, PS b) {
	PS h;
	h.tu = a.tu*b.mau - b.tu*a.mau;
    h.mau = a.mau*b.mau;
	toiGianPhanSo(h);
	return h;
}

PS tichPhanSo(PS a, PS b) {
	PS tich;
	tich.tu = a.tu*b.tu;
	tich.mau = a.mau*b.mau;
	toiGianPhanSo(tich);
	return tich;
}

PS thuongPhanSo(PS a, PS b) {
	PS thuong;
	thuong.tu = a.tu*b.mau;
	thuong.mau = a.mau*b.tu;
	toiGianPhanSo(thuong);
	return thuong;
}

bool soSanhNhoHonPhanSo(PS a, PS b) {
    PS h;
	h.tu = a.tu*b.mau - b.tu*a.mau;
	if (h.tu < 0) {
	    return 1;
	} else {
		return 0;
	}
} 

void nhapds(ds &ds) {
	cout << "\nNhap vao so luong phan so: ";
	cin >> ds.n;
	for (int i = 0; i < ds.n; i++) {
		cout << "\nNhap vao phan so thu " << i + 1 << ": ";
		nhapPhanSo(ds.a[i]);
		inPhanSo(ds.a[i]);
	}
}

void xuatds (ds &ds) {
	for (int i = 0; i < ds.n; i++) {
		cout << "\n";
		inPhanSo(ds.a[i]);
		cout << "\n";
	}
}

void sapxep(ds &ds) {
	PS tg;
    for(int i = 0; i < ds.n - 1; i++){
        for(int j = i + 1; j < ds.n; j++){
            if(soSanhNhoHonPhanSo(ds.a[i], ds.a[j]) == 1){
                // Hoan vi 2 so a[i] va a[j]
                tg = ds.a[i];
                ds.a[i] = ds.a[j];
                ds.a[j] = tg;        
            }
        }
    }
}

int demBang0(ds &ds) {
	int dem;
	for (int i = 0; i < ds.n; i++) {
		if (ds.a[i].tu == 0) dem++;
	}
	return dem;
}

int demLonHon0(ds &ds) {
	int dem;
	for (int i = 0; i < ds.n; i++) {
		if (ds.a[i].tu*ds.a[i].mau > 0) dem++;
	}
	return dem;
}

int demNhoHon0(ds &ds) {
	int dem;
	for (int i = 0; i < ds.n; i++) {
		if (ds.a[i].tu*ds.a[i].mau < 0) dem++;
	}
	return dem;
}

PS tongPhanSoLonHon1(ds &ds) {
    PS tmp;
    tmp.tu = 0;
    tmp.mau = 1;
    for (int i = 0; i < ds.n; i++) {
    	if (abs(ds.a[i].tu) > abs(ds.a[i].mau)) {
            tmp.tu = tmp.tu*ds.a[i].mau + tmp.mau*ds.a[i].tu;
            tmp.mau = tmp.mau*ds.a[i].mau;
            toiGianPhanSo(tmp);
        }
    }
    return tmp; 
}

PS tongPhanSoNhoHon1(ds &ds) {
    PS tmp;
    tmp.tu = 0;
    tmp.mau = 1;
    for (int i = 0; i < ds.n; i++) {
    	if (abs(ds.a[i].tu) < abs(ds.a[i].mau)) {
            tmp.tu = tmp.tu*ds.a[i].mau + tmp.mau*ds.a[i].tu;
            tmp.mau = tmp.mau*ds.a[i].mau;
            toiGianPhanSo(tmp);
        }
    }
    return tmp; 
}